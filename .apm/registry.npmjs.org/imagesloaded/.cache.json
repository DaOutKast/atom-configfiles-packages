{"_id":"imagesloaded","_rev":"8-856e34b78e21e3557d4ba6096ff9c294","name":"imagesloaded","description":"JavaScript is all like _You images done yet or what?_","dist-tags":{"latest":"4.1.1"},"versions":{"3.1.8":{"name":"imagesloaded","version":"3.1.8","description":"You images done yet or what?","main":"imagesloaded.js","devDependencies":{"grunt":"~0.4.0","grunt-contrib-jshint":"~0.1.1","grunt-contrib-uglify":"~0.1.2","grunt-contrib-watch":"~0.3.1","highlight.js":"~7.3.0","marked":"~0.2.8","grunt-requirejs":"~0.4.0"},"dependencies":{"wolfy87-eventemitter":"4.x","eventie":">=1.0.4 <2"},"repository":{"type":"git","url":"git://github.com/desandro/imagesloaded.git"},"keywords":["images","loaded","ui"],"license":"MIT","bugs":{"url":"https://github.com/desandro/imagesloaded/issues"},"homepage":"https://github.com/desandro/imagesloaded","_id":"imagesloaded@3.1.8","dist":{"shasum":"2fb1fe8c8e6957ee390e880cc6d4ef7e436d457b","tarball":"https://registry.npmjs.org/imagesloaded/-/imagesloaded-3.1.8.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"desandro","email":"desandrocodes@gmail.com"},"maintainers":[{"name":"desandro","email":"desandrocodes@gmail.com"}],"directories":{}},"3.2.0":{"name":"imagesloaded","version":"3.2.0","description":"You images done yet or what?","main":"imagesloaded.js","dependencies":{"wolfy87-eventemitter":">=4.2 <5.0","eventie":"~1.0.4"},"devDependencies":{"chalk":"^1.1.1","cheerio":"^0.19.0","gulp":"^3.9.0","gulp-jshint":"^1.11.2","gulp-json-lint":"^0.1.0","gulp-rename":"^1.2.2","gulp-replace":"^0.5.4","gulp-uglify":"^1.4.2","gulp-util":"^3.0.7","highlight.js":"^8.9.1","marked":"^0.3.5","minimist":"^1.2.0","requirejs":"^2.1.20","through2":"^2.0.0"},"repository":{"type":"git","url":"git://github.com/desandro/imagesloaded.git"},"keywords":["images","loaded","ui","dom","jquery-plugin"],"license":"MIT","bugs":{"url":"https://github.com/desandro/imagesloaded/issues"},"homepage":"https://github.com/desandro/imagesloaded","directories":{"test":"test"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"author":{"name":"David DeSandro"},"gitHead":"5aac318e5cb34996f25a10e939bba498792b96c5","_id":"imagesloaded@3.2.0","_shasum":"31f7c0840dee77184ce6ff9e81ae51936f4e5384","_from":".","_npmVersion":"2.7.4","_nodeVersion":"0.12.2","_npmUser":{"name":"desandro","email":"desandrocodes@gmail.com"},"maintainers":[{"name":"desandro","email":"desandrocodes@gmail.com"}],"dist":{"shasum":"31f7c0840dee77184ce6ff9e81ae51936f4e5384","tarball":"https://registry.npmjs.org/imagesloaded/-/imagesloaded-3.2.0.tgz"}},"4.0.0":{"name":"imagesloaded","version":"4.0.0","description":"You images done yet or what?","main":"imagesloaded.js","dependencies":{"wolfy87-eventemitter":">=4.2 <5.0"},"devDependencies":{"chalk":"^1.1.1","cheerio":"^0.19.0","gulp":"^3.9.0","gulp-jshint":"^1.11.2","gulp-json-lint":"^0.1.0","gulp-rename":"^1.2.2","gulp-replace":"^0.5.4","gulp-uglify":"^1.4.2","gulp-util":"^3.0.7","highlight.js":"^8.9.1","marked":"^0.3.5","minimist":"^1.2.0","requirejs":"^2.1.20","through2":"^2.0.0"},"repository":{"type":"git","url":"git://github.com/desandro/imagesloaded.git"},"keywords":["images","loaded","ui","dom","jquery-plugin"],"license":"MIT","bugs":{"url":"https://github.com/desandro/imagesloaded/issues"},"homepage":"https://github.com/desandro/imagesloaded","directories":{"test":"test"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"author":{"name":"David DeSandro"},"gitHead":"c8b41695e9456db561426eb3f2a34ebb4cf52339","_id":"imagesloaded@4.0.0","_shasum":"d68f01335cc1f91874b51a10b7ead31148a0c945","_from":".","_npmVersion":"2.14.12","_nodeVersion":"4.2.4","_npmUser":{"name":"desandro","email":"desandrocodes@gmail.com"},"maintainers":[{"name":"desandro","email":"desandrocodes@gmail.com"}],"dist":{"shasum":"d68f01335cc1f91874b51a10b7ead31148a0c945","tarball":"https://registry.npmjs.org/imagesloaded/-/imagesloaded-4.0.0.tgz"}},"4.1.0":{"name":"imagesloaded","version":"4.1.0","description":"You images done yet or what?","main":"imagesloaded.js","dependencies":{"ev-emitter":"~1.0.0"},"devDependencies":{"chalk":"^1.1.1","cheerio":"^0.19.0","gulp":"^3.9.0","gulp-jshint":"^1.11.2","gulp-json-lint":"^0.1.0","gulp-rename":"^1.2.2","gulp-replace":"^0.5.4","gulp-uglify":"^1.4.2","gulp-util":"^3.0.7","highlight.js":"^8.9.1","marked":"^0.3.5","minimist":"^1.2.0","requirejs":"^2.1.20","through2":"^2.0.0"},"repository":{"type":"git","url":"git://github.com/desandro/imagesloaded.git"},"keywords":["images","loaded","ui","dom","jquery-plugin"],"license":"MIT","bugs":{"url":"https://github.com/desandro/imagesloaded/issues"},"homepage":"https://github.com/desandro/imagesloaded","directories":{"test":"test"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"author":{"name":"David DeSandro"},"gitHead":"eb483b9b5e1edcc06daa6bb980810b4accd406f0","_id":"imagesloaded@4.1.0","_shasum":"cfb2b74432c88dcbe3e9f393fb1d9a6b04d3ec26","_from":".","_npmVersion":"2.14.12","_nodeVersion":"4.2.4","_npmUser":{"name":"desandro","email":"desandrocodes@gmail.com"},"maintainers":[{"name":"desandro","email":"desandrocodes@gmail.com"}],"dist":{"shasum":"cfb2b74432c88dcbe3e9f393fb1d9a6b04d3ec26","tarball":"https://registry.npmjs.org/imagesloaded/-/imagesloaded-4.1.0.tgz"}},"4.1.1":{"name":"imagesloaded","version":"4.1.1","description":"JavaScript is all like _You images done yet or what?_","main":"imagesloaded.js","dependencies":{"ev-emitter":"~1.0.0"},"devDependencies":{"chalk":"^1.1.1","cheerio":"^0.19.0","gulp":"^3.9.0","gulp-jshint":"^1.11.2","gulp-json-lint":"^0.1.0","gulp-rename":"^1.2.2","gulp-replace":"^0.5.4","gulp-uglify":"^1.4.2","gulp-util":"^3.0.7","highlight.js":"^8.9.1","marked":"^0.3.5","minimist":"^1.2.0","requirejs":"^2.1.20","through2":"^2.0.0"},"repository":{"type":"git","url":"git://github.com/desandro/imagesloaded.git"},"keywords":["images","loaded","ui","dom","jquery-plugin"],"license":"MIT","bugs":{"url":"https://github.com/desandro/imagesloaded/issues"},"homepage":"https://github.com/desandro/imagesloaded","directories":{"test":"test"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"author":{"name":"David DeSandro"},"gitHead":"72b5d600a435803ab1dd2c549b8cba2941ab79ba","_id":"imagesloaded@4.1.1","_shasum":"53b5b66615360850a5a264b1293e7f4d06d3bd51","_from":".","_npmVersion":"2.14.12","_nodeVersion":"4.2.4","_npmUser":{"name":"desandro","email":"desandrocodes@gmail.com"},"maintainers":[{"name":"desandro","email":"desandrocodes@gmail.com"}],"dist":{"shasum":"53b5b66615360850a5a264b1293e7f4d06d3bd51","tarball":"https://registry.npmjs.org/imagesloaded/-/imagesloaded-4.1.1.tgz"},"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/imagesloaded-4.1.1.tgz_1472395696084_0.5011548567563295"}}},"readme":"# imagesLoaded\n\n<p class=\"tagline\">JavaScript is all like \"You images done yet or what?\"</p>\n\n[imagesloaded.desandro.com](http://imagesloaded.desandro.com)\n\nDetect when images have been loaded.\n\n## Install\n\n### Download\n\n+ [imagesloaded.pkgd.min.js](https://npmcdn.com/imagesloaded@4/imagesloaded.pkgd.min.js) minified\n+ [imagesloaded.pkgd.js](https://npmcdn.com/imagesloaded@4/imagesloaded.pkgd.js) un-minified\n\n### CDN\n\n``` html\n<script src=\"https://npmcdn.com/imagesloaded@4.1/imagesloaded.pkgd.min.js\"></script>\n<!-- or -->\n<script src=\"https://npmcdn.com/imagesloaded@4.1/imagesloaded.pkgd.js\"></script>\n```\n\n### Package managers\n\nInstall via [npm](https://www.npmjs.com/package/imagesloaded): `npm install imagesloaded`\n\nInstall via [Bower](http://bower.io): `bower install imagesloaded --save`\n\n## jQuery\n\nYou can use imagesLoaded as a jQuery Plugin.\n\n``` js\n$('#container').imagesLoaded( function() {\n  // images have loaded\n});\n\n// options\n$('#container').imagesLoaded( {\n  // options...\n  },\n  function() {\n    // images have loaded\n  }\n);\n```\n\n`.imagesLoaded()` returns a [jQuery Deferred object](http://api.jquery.com/category/deferred-object/). This allows you to use `.always()`, `.done()`, `.fail()` and `.progress()`.\n\n``` js\n$('#container').imagesLoaded()\n  .always( function( instance ) {\n    console.log('all images loaded');\n  })\n  .done( function( instance ) {\n    console.log('all images successfully loaded');\n  })\n  .fail( function() {\n    console.log('all images loaded, at least one is broken');\n  })\n  .progress( function( instance, image ) {\n    var result = image.isLoaded ? 'loaded' : 'broken';\n    console.log( 'image is ' + result + ' for ' + image.img.src );\n  });\n```\n\n## Vanilla JavaScript\n\nYou can use imagesLoaded with vanilla JS.\n\n``` js\nimagesLoaded( elem, callback )\n// options\nimagesLoaded( elem, options, callback )\n// you can use `new` if you like\nnew imagesLoaded( elem, callback )\n```\n\n+ `elem` _Element, NodeList, Array, or Selector String_\n+ `options` _Object_\n+ `callback` _Function_ - function triggered after all images have been loaded\n\nUsing a callback function is the same as binding it to the `always` event (see below).\n\n``` js\n// element\nimagesLoaded( document.querySelector('#container'), function( instance ) {\n  console.log('all images are loaded');\n});\n// selector string\nimagesLoaded( '#container', function() {...});\n// multiple elements\nvar posts = document.querySelectorAll('.post');\nimagesLoaded( posts, function() {...});\n```\n\nBind events with vanilla JS with .on(), .off(), and .once() methods.\n\n``` js\nvar imgLoad = imagesLoaded( elem );\nfunction onAlways( instance ) {\n  console.log('all images are loaded');\n}\n// bind with .on()\nimgLoad.on( 'always', onAlways );\n// unbind with .off()\nimgLoad.off( 'always', onAlways );\n```\n\n## Background\n\nDetect when background images have loaded, in addition to `<img>`s.\n\nSet `{ background: true }` to detect when the element's background image has loaded.\n\n``` js\n// jQuery\n$('#container').imagesLoaded( { background: true }, function() {\n  console.log('#container background image loaded');\n});\n\n// vanilla JS\nimagesLoaded( '#container', { background: true }, function() {\n  console.log('#container background image loaded');\n});\n```\n\n[See jQuery demo](http://codepen.io/desandro/pen/pjVMPB) or [vanilla JS demo](http://codepen.io/desandro/pen/avKooW) on CodePen.\n\nSet to a selector string like `{ background: '.item' }` to detect when the background images of child elements have loaded.\n\n``` js\n// jQuery\n$('#container').imagesLoaded( { background: '.item' }, function() {\n  console.log('all .item background images loaded');\n});\n\n// vanilla JS\nimagesLoaded( '#container', { background: '.item' }, function() {\n  console.log('all .item background images loaded');\n});\n```\n\n[See jQuery demo](http://codepen.io/desandro/pen/avKoZL) or [vanilla JS demo](http://codepen.io/desandro/pen/vNrBGz) on CodePen.\n\n## Events\n\n### always\n\n``` js\n// jQuery\n$('#container').imagesLoaded().always( function( instance ) {\n  console.log('ALWAYS - all images have been loaded');\n});\n\n// vanilla JS\nimgLoad.on( 'always', function( instance ) {\n  console.log('ALWAYS - all images have been loaded');\n});\n```\n\nTriggered after all images have been either loaded or confirmed broken.\n\n+ `instance` _imagesLoaded_ - the imagesLoaded instance\n\n### done\n\n``` js\n// jQuery\n$('#container').imagesLoaded().done( function( instance ) {\n  console.log('DONE  - all images have been successfully loaded');\n});\n\n// vanilla JS\nimgLoad.on( 'done', function( instance ) {\n  console.log('DONE  - all images have been successfully loaded');\n});\n```\n\nTriggered after all images have successfully loaded without any broken images.\n\n### fail\n\n``` js\n$('#container').imagesLoaded().fail( function( instance ) {\n  console.log('FAIL - all images loaded, at least one is broken');\n});\n\n// vanilla JS\nimgLoad.on( 'fail', function( instance ) {\n  console.log('FAIL - all images loaded, at least one is broken');\n});\n```\n\nTriggered after all images have been loaded with at least one broken image.\n\n### progress\n\n``` js\nimgLoad.on( 'progress', function( instance, image ) {\n  var result = image.isLoaded ? 'loaded' : 'broken';\n  console.log( 'image is ' + result + ' for ' + image.img.src );\n});\n```\n\nTriggered after each image has been loaded.\n\n+ `instance` _imagesLoaded_ - the imagesLoaded instance\n+ `image` _LoadingImage_ - the LoadingImage instance of the loaded image\n\n<!-- sponsored -->\n\n## Properties\n\n### LoadingImage.img\n\n_Image_ - The `img` element\n\n### LoadingImage.isLoaded\n\n_Boolean_ - `true` when the image has succesfully loaded\n\n### imagesLoaded.images\n\nArray of _LoadingImage_ instances for each image detected\n\n``` js\nvar imgLoad = imagesLoaded('#container');\nimgLoad.on( 'always', function() {\n  console.log( imgLoad.images.length + ' images loaded' );\n  // detect which image is broken\n  for ( var i = 0, len = imgLoad.images.length; i < len; i++ ) {\n    var image = imgLoad.images[i];\n    var result = image.isLoaded ? 'loaded' : 'broken';\n    console.log( 'image is ' + result + ' for ' + image.img.src );\n  }\n});\n```\n\n## Browserify\n\nimagesLoaded works with [Browserify](http://browserify.org/).\n\n``` bash\nnpm install imagesloaded --save\n```\n\n``` js\nvar imagesLoaded = require('imagesloaded');\n\nimagesLoaded( elem, function() {...} );\n```\n\nUse `.makeJQueryPlugin` to make to use `.imagesLoaded()` jQuery plugin.\n\n``` js\nvar $ = require('jquery');\nvar imagesLoaded = require('imagesloaded');\n\n// provide jQuery argument\nimagesLoaded.makeJQueryPlugin( $ );\n// now use .imagesLoaded() jQuery plugin\n$('#container').imagesLoaded( function() {...});\n```\n\n## Webpack\n\nInstall imagesLoaded with npm.\n\n``` bash\nnpm install imagesloaded\n```\n\nYou can then `require('imagesloaded')`.\n\n``` js\n// main.js\nvar imagesLoaded = require('imagesloaded');\n\nimagesLoaded( '#container', function() {\n  // images have loaded\n});\n```\n\nUse `.makeJQueryPlugin` to make `.imagesLoaded()` jQuery plugin.\n\n``` js\n// main.js\nvar imagesLoaded = require('imagesloaded');\nvar $ = require('jquery');\n\n// provide jQuery argument\nimagesLoaded.makeJQueryPlugin( $ );\n// now use .imagesLoaded() jQuery plugin\n$('#container').imagesLoaded( function() {...});\n```\n\nRun webpack.\n\n``` bash\nwebpack main.js bundle.js\n```\n\n## RequireJS\n\nimagesLoaded works with [RequireJS](http://requirejs.org).\n\nYou can require [imagesloaded.pkgd.js](http://imagesloaded.desandro.com/imagesloaded.pkgd.js).\n\n``` js\nrequirejs( [\n  'path/to/imagesloaded.pkgd.js',\n], function( imagesLoaded ) {\n  imagesLoaded( '#container', function() { ... });\n});\n```\n\nUse `.makeJQueryPlugin` to make `.imagesLoaded()` jQuery plugin.\n\n``` js\nrequirejs( [\n  'jquery',\n  'path/to/imagesloaded.pkgd.js',\n], function( $, imagesLoaded ) {\n  // provide jQuery argument\n  imagesLoaded.makeJQueryPlugin( $ );\n  // now use .imagesLoaded() jQuery plugin\n  $('#container').imagesLoaded( function() {...});\n});\n```\n\nYou can manage dependencies with [Bower](http://bower.io). Set `baseUrl` to `bower_components` and set a path config for all your application code.\n\n``` js\nrequirejs.config({\n  baseUrl: 'bower_components/',\n  paths: { // path to your app\n    app: '../'\n  }\n});\n\nrequirejs( [\n  'imagesloaded/imagesloaded',\n  'app/my-component.js'\n], function( imagesLoaded, myComp ) {\n  imagesLoaded( '#container', function() { ... });\n});\n```\n\n## Browser support\n\n+ IE9+\n+ Android 2.3+\n+ iOS Safari 4+\n+ All other modern browsers\n\nUse [imagesLoaded v3](http://imagesloaded.desandro.com/v3/) for IE8 support.\n\n## MIT License\n\nimagesLoaded is released under the [MIT License](http://desandro.mit-license.org/). Have at it.\n","maintainers":[{"name":"desandro","email":"desandrocodes@gmail.com"}],"time":{"modified":"2016-08-28T14:48:17.205Z","created":"2014-06-14T13:12:14.288Z","3.1.8":"2014-06-14T13:12:14.288Z","3.2.0":"2015-10-29T03:04:32.051Z","4.0.0":"2015-12-28T15:12:13.421Z","4.1.0":"2016-01-15T14:56:35.710Z","4.1.1":"2016-08-28T14:48:17.205Z"},"homepage":"https://github.com/desandro/imagesloaded","keywords":["images","loaded","ui","dom","jquery-plugin"],"repository":{"type":"git","url":"git://github.com/desandro/imagesloaded.git"},"bugs":{"url":"https://github.com/desandro/imagesloaded/issues"},"license":"MIT","readmeFilename":"README.md","author":{"name":"David DeSandro"},"users":{"wtower":true,"fabrianibrahim":true},"_attachments":{},"_etag":"\"BGEP4VTZJOP690RWGKBGP6VW1\""}